---
import type { ActionReturnType } from "astro:actions";
import { actions } from "astro:actions";
import { scope } from "simple:scope";
import FormMessage from "~/components/form-message.astro";
import Layout from "~/components/layout.astro";
import { Alert, AlertDescription, AlertTitle } from "~/components/ui/alert";
import { Button } from "~/components/ui/button";
import { Input } from "~/components/ui/input";
import { Label } from "~/components/ui/label";
import { createSession, getSession } from "~/db/session";
import { getInputErrors } from "~/lib/utils";

const session = await getSession(Astro.request);

if (session) {
	return Astro.redirect("/");
}

let formData: FormData | null = null;
let result: ActionReturnType<typeof actions.auth.login> | null = null;

if (Astro.request.method === "POST") {
	formData = await Astro.request.formData();
	result = await Astro.callAction(actions.auth.login, formData);

	if (result?.data) {
		const session = await createSession(result.data.userId);

		const response = Astro.redirect("/");

		response.headers.set("Set-Cookie", session.join("; "));

		return response;
	}
}

const errors = getInputErrors(result?.error);
const autofocusElement = Astro.request.method === "POST" ? "password" : "email";
---

<Layout>
	<div class="container max-w-lg min-h-screen flex flex-col justify-center">
		<div transition:name="error">
			{
				result?.error?.code === "UNAUTHORIZED" ? (
					<Alert variant="destructive" className="mb-4">
						<AlertTitle>Error</AlertTitle>
						<AlertDescription>{result?.error.message}</AlertDescription>
					</Alert>
				) : null
			}
		</div>

		<h1 class="text-2xl" transition:name="title">Login</h1>

		<div class="pt-8">
			<form method="POST" class="space-y-4">
				<div class="grid gap-4 grid-cols-1" transition:name="form">
					<div transition:name="email">
						<Label htmlFor={scope("email")}>Email</Label>
						<Input
							id={scope("email")}
							placeholder="user@example.com"
							required
							type="email"
							name="email"
							autoFocus={autofocusElement === "email" || undefined}
							defaultValue={formData?.get("email")?.toString()}
						/>
						<FormMessage message={errors?.email} />
					</div>
					<div transition:name="password">
						<Label htmlFor={scope("password")}>Password</Label>
						<Input
							id={scope("password")}
							placeholder="••••••••"
							required
							type="password"
							name="password"
							autoFocus={autofocusElement === "password" || undefined}
						/>
						<FormMessage message={errors?.password} />
					</div>
				</div>

				<Button type="submit" transition:name="submit">Login</Button>

				<p class="pt-4" transition:name="register">
					Don't have an account? <a href="/register" class="text-blue-500">
						Register
					</a>
				</p>
			</form>
		</div>
	</div>
</Layout>
